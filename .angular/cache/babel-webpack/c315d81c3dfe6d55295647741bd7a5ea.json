{"ast":null,"code":"import { environment } from './../../environments/environment.prod';\nimport { tap } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API = environment.urlAPI;\nexport let CodeService = /*#__PURE__*/(() => {\n  class CodeService {\n    constructor(_http) {\n      this._http = _http;\n    }\n\n    create(code) {\n      return this._http.post(`${API}/codes/`, code);\n    }\n\n    read(valor) {\n      const params = valor ? new HttpParams().append('q', valor) : undefined;\n      return this._http.get(`${API}/codes/`, {\n        params\n      }).pipe(tap(valor => console.log(valor)));\n    }\n\n    update(id, code) {\n      return this._http.put(`${API}/codes/${id}/`, code);\n    }\n\n    like(id, count, status) {\n      return this._http.patch(`${API}/codes/${id}/`, {\n        countLike: count,\n        statusLike: status\n      });\n    }\n\n    readById(id) {\n      return this._http.get(`${API}/codes/${id}`);\n    }\n\n  }\n\n  CodeService.ɵfac = function CodeService_Factory(t) {\n    return new (t || CodeService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CodeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CodeService,\n    factory: CodeService.ɵfac,\n    providedIn: 'root'\n  });\n  return CodeService;\n})();","map":null,"metadata":{},"sourceType":"module"}